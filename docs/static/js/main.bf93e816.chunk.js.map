{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GiftGrid.js","hooks/useFetchGifs.js","components/GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","respuesta","json","datos","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GiftGrid","loading","state","setState","useEffect","then","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"4MAGaA,EAAc,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAE3B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAE1BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAKlB,SACI,uBACIO,KAAO,OACPC,MAAUT,EACVU,SAnBc,SAACP,GAEvBF,EAAgBE,EAAEQ,OAAOF,a,8BCNpBG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUH,GAF7C,uDAFP,oCAEO,SAGKI,MAAMF,GAHX,cAGbG,EAHa,gBAIWA,EAAUC,OAJrB,uBAILC,EAJK,EAIXC,KAEFC,EAAOF,EAAMG,KAAI,SAAAC,GAAQ,IAAD,EAE1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXX,IAAG,UAAES,EAAIG,cAAN,aAAE,EAAYC,iBAAiBb,QAXvB,kBAgBZO,GAhBY,4CAAH,sDCDPO,EAAc,SAAC,GAAqB,IAAlBH,EAAiB,EAAjBA,MAAOX,EAAU,EAAVA,IAIlC,OACI,sBAAKe,UAAU,0CAAf,UACI,qBAAKC,IAAMhB,EAAMiB,IAAMN,IACvB,4BAAIA,QCJHO,EAAW,SAAC,GAAmB,IAAhBpB,EAAe,EAAfA,SAGxB,ECLwB,SAAEA,GAE1B,MAA0Bd,mBAAS,CAC/BsB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAkBA,OAbAC,qBAAU,WACNzB,EAAQC,GACPyB,MAAK,SAAAd,GAGEY,EAAS,CACLf,KAAMG,EACNU,SAAS,SAItB,CAACrB,IAEGsB,EDf0BI,CAAe1B,GAAnCc,EAAb,EAAQN,KAAaa,EAArB,EAAqBA,QAErB,OACI,qCACA,mCAAMrB,EAAN,OACEqB,GAAW,2CACb,qBAAKJ,UAAU,YAAf,SAEKH,EAAOJ,KAAI,SAAAC,GAAG,OAAI,wBAAC,EAAD,2BACXA,GADW,IAEfgB,IAAKhB,EAAIC,eEbZgB,EAAe,WAExB,MAAoC1C,mBAAS,CAAC,cAA9C,mBAAO2C,EAAP,KAAmB5C,EAAnB,KASA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAEI4C,EAAWnB,KAAK,SAACV,GAAD,OACZ,cAAC,EAAD,CACIA,SAAWA,GACHA,YCrBhC8B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.bf93e816.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ( { setCategories } ) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        //console.log ( e.target.value );\r\n        setInputValue ( e.target.value );\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault(); \r\n        if(inputValue.trim().length > 2)\r\n        {\r\n            setCategories(cats => [inputValue, ...cats]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input \r\n                type = \"text\"\r\n                value = { inputValue }\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","\r\nconst api_key = 'cJQCLLg7DiSvFPQ74GJu6DUWMTdj9IVN';\r\n\r\nexport const getGifs = async ( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&offset=0&rating=g&lang=es&api_key=${api_key}`;\r\n    const respuesta = await fetch(url);\r\n    const { data: datos } = await respuesta.json();\r\n\r\n    const gifs = datos.map(img => {\r\n\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url,\r\n        }\r\n\r\n    })\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( { title, url} ) => {\r\n\r\n    //console.log( title, url );\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__flipInX\">\r\n            <img src={ url } alt={ title } />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GiftGrid = ( { category }) => {\r\n\r\n    //Custom Hook:\r\n    const { data:images, loading } = useFetchGifs ( category );\r\n   \r\n    return (\r\n        <>\r\n        <h3> {category} </h3>\r\n        { loading && <p>Loading...</p> }\r\n        <div className=\"card-grid\">\r\n\r\n            {images.map(img => <GifGridItem\r\n                {...img}\r\n                key={img.id} />\r\n            )}\r\n\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n    useEffect(() => {\r\n        getGifs(category)\r\n        .then(img => \r\n            {\r\n             \r\n                setState({\r\n                    data: img,\r\n                    loading: false\r\n                })\r\n              \r\n            })\r\n    }, [category])\r\n\r\n    return state;\r\n\r\n}\r\n","import React, { useState } from 'react'\r\nimport { AddCategory } from './AddCategory';\r\nimport { GiftGrid } from './GiftGrid';\r\n\r\n//Usar el snipet rafc\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n    /*\r\n    const handleAdd = () => {\r\n        //setCategories([...categories, 'One Punch Man']);\r\n        //cats ES EL VALOR DEL ESTADO ANTERIOR.\r\n        setCategories( cats => [...cats, 'One Punch Man']);\r\n    }\r\n    */\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories } />\r\n            <hr />\r\n\r\n            <ul>\r\n            {\r\n                categories.map( (category) => (\r\n                    <GiftGrid \r\n                        category={ category }\r\n                        key = { category }\r\n                    />\r\n                ))\r\n            }\r\n            </ul>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifExpertApp } from \"./components/GifExpertApp\";\n\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}